<?xml version="1.0" encoding="UTF-8"?>
<behaviouralProgramMM:Behaviour xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:behaviouralProgramMM="http://www.example.org/behaviouralProgramMM">
  <functions Name="Runner.Foo">
    <functionBody xsi:type="behaviouralProgramMM:Assignment" VariableName="i">
      <assignexpression ExpressionString="0"/>
    </functionBody>
    <functionBody xsi:type="behaviouralProgramMM:ConditionalBranch">
      <Ifstatements xsi:type="behaviouralProgramMM:FunctionCall" FuncName="Console.WriteLine">
        <arguments ExpressionString="&quot;n less than 10. n = {0}&quot;"/>
        <arguments ExpressionString="n"/>
      </Ifstatements>
      <elsestatements xsi:type="behaviouralProgramMM:FunctionCall" FuncName="Console.WriteLine">
        <arguments ExpressionString="&quot;n at least 10&quot;"/>
      </elsestatements>
      <ifexpression ExpressionString="n &lt; 10"/>
    </functionBody>
    <functionBody xsi:type="behaviouralProgramMM:FunctionCall" FuncName="Console.WriteLine">
      <arguments ExpressionString="&quot;Foo is done!&quot;"/>
    </functionBody>
    <functionBody xsi:type="behaviouralProgramMM:TryCatch">
      <catch xsi:type="behaviouralProgramMM:Assignment" VariableName="i">
        <assignexpression ExpressionString="0"/>
      </catch>
      <catch xsi:type="behaviouralProgramMM:RaiseException">
        <expression ExpressionString="new java.lang.Exception();"/>
      </catch>
      <try xsi:type="behaviouralProgramMM:Return">
        <expression ExpressionString="i"/>
      </try>
    </functionBody>
    <functionBody xsi:type="behaviouralProgramMM:Return">
      <expression ExpressionString="i"/>
    </functionBody>
  </functions>
  <functions Name="Runner.Main">
    <functionBody xsi:type="behaviouralProgramMM:Instantiation" VarName="i" VarType="int">
      <InitiationExpression ExpressionString="42"/>
    </functionBody>
    <functionBody xsi:type="behaviouralProgramMM:Instantiation" VarName="prog" VarType="Program">
      <InitiationExpression ExpressionString="new Program()"/>
    </functionBody>
    <functionBody xsi:type="behaviouralProgramMM:Loop">
      <loopstatements xsi:type="behaviouralProgramMM:FunctionCall" FuncName="prog.Foo">
        <arguments ExpressionString="i"/>
      </loopstatements>
      <loopstatements xsi:type="behaviouralProgramMM:Assignment" VariableName="i">
        <assignexpression ExpressionString="i - 1"/>
      </loopstatements>
      <loopexpression ExpressionString="i > 0"/>
    </functionBody>
  </functions>
</behaviouralProgramMM:Behaviour>
